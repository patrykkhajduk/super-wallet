spring:
  application:
    name: super-wallet
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: ${MONGODB_DATABASE}
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      auto-index-creation: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${KAFKA_GROUP_ID}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: io.hyde.infrastructure.adapters.input.messaging.events
      topics:
        wallet-commands:
          name: ${KAFKA_TOPIC_WALLET_COMMANDS}
          processing-timeout: ${KAFKA_TOPIC_PROCESSING_TIMEOUT:PT120S}
          retry-count: ${KAFKA_TOPIC_RETRY_COUNT:10}
          retry-delay: ${KAFKA_TOPIC_RETRY_DELAY:PT5S}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: io.hyde.wallet.infrastructure.adapters.output.messaging.events;
      topics:
        wallet-events:
          name: ${KAFKA_TOPIC_WALLET_EVENTS}
  threads:
    virtual:
      enabled: true

wallets:
  limit-per-owner: ${WALLET_LIMIT_PER_OWNER}

jobs:
  process-not-completed-wallet-processes-steps:
    cron: ${PROCESS_NOT_COMPLETED_WALLET_PROCESSES_STEPS_JOB_CRON:* * * * * ?}
    processes-creation-date-delay: ${PROCESS_NOT_COMPLETED_WALLET_PROCESSES_STEPS_PROCESSES_CREATION_DATE_DELAY:PT60S}
    timeout: ${PROCESS_NOT_COMPLETED_WALLET_PROCESSES_STEPS_TIMEOUT:PT120S}